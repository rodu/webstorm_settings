<templateSet group="SublimeSnippets">
  <template name="nn" value="expect($VAR1$).not.toBeNull();$END$" description="not.toBeNull" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ne" value="expect($VAR1$).not.toEqual($VAR2$);$END$" description="not.toEqual" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="any" value="jasmine.any($VAR1$)$END$" description="jasmine.any" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="caa" value="$VAR1$.calls.allArgs()" description="spy.calls.allArgs" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;spy&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="aee" value="afterEach(() =&gt; {&#10;&#9;$VAR1$&#10;});" description="afterEach" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="nb" value="expect($VAR1$).not.toBe($VAR2$);$END$" description="not.toBe" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tbt" value="expect($VAR1$).toBeTruthy();$END$" description="toBeTruthy" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="nu" value="expect($VAR1$).not.toBeUndefined();$END$" description="not.toBeUndefined" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cf" value="$VAR1$.calls.first()" description="spy.calls.first" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;spy&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tb" value="expect($VAR1$).toBe($VAR2$);$END$" description="toBe" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tbd" value="expect($VAR1$).toBeDefined();$END$" description="toBeDefined" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="nf" value="expect($VAR1$).not.toBeFalsy();$END$" description="not.toBeFalsy" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cmr" value="$VAR1$.calls.mostRecent()" description="spy.calls.mostRecent" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;spy&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="thbcw" value="expect($VAR1$).toHaveBeenCalledWith($VAR2$);$END$" description="toHaveBeenCalledWith" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;params&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="nd" value="expect($VAR1$).not.toBeDefined();$END$" description="not.toBeDefined" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="nlt" value="expect($VAR1$).not.toBeLessThan($VAR2$);$END$" description="not.toBeLessThan" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="te" value="expect($VAR1$).toEqual($VAR2$);$END$" description="toEqual" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ngt" value="expect($VAR1$).not.toBeGreaterThan($VAR2$);$END$" description="not.toBeGreaterThan" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="nm" value="expect($VAR1$).not.toMatch($VAR2$);$END$" description="not.toMatch" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="nct" value="expect($VAR1$).not.toBeCloseTo($VAR2$, $VAR3$);$END$" description="not.toBeCloseTo" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;number&quot;" alwaysStopAt="true" />
    <variable name="VAR3" expression="" defaultValue="&quot;delta&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="desc" value="describe('$VAR1$', function() {&#10;&#9;$VAR2$&#10;});" description="describe" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;Name of the group&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="xdesc" value="xdescribe('$VAR1$', function() {&#10;&#9;$VAR2$&#10;});" description="xdescribe" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;Name of the group&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="desce" value="describe('$VAR1$', () =&gt; {&#10;&#9;$VAR2$&#10;});" description="describe" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;Name of the group&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="srv" value="spyOn($VAR1$, '$VAR2$').and.returnValue('$VAR3$');$END$" description="spyOn.and.returnValue" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;object&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;method&quot;" alwaysStopAt="true" />
    <variable name="VAR3" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ss" value="spyOn($VAR1$, '$VAR2$').and.stub();$END$" description="spyOn.and.stub" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;object&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;method&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="it" value="it('$VAR1$', function() {&#10;&#9;$VAR2$&#10;});" description="it" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;should behave...&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ite" value="it('$VAR1$', () =&gt; {&#10;&#9;$VAR2$&#10;});" description="it" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;should behave...&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="scfe" value="spyOn($VAR1$, '$VAR2$').and.callFake($VAR3$);$END$" description="spyOn.and.callFake" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;object&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;method&quot;" alwaysStopAt="true" />
    <variable name="VAR3" expression="" defaultValue="&quot;() =&gt; \{&#10;  &#10;\}&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="so" value="spyOn($VAR1$, '$VAR2$')$VAR3$;$END$" description="spyOn" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;object&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;method&quot;" alwaysStopAt="true" />
    <variable name="VAR3" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="fite" value="fit('$VAR1$', () =&gt; {&#10;  $VAR2$&#10;});" description="focused it" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;should behave...&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="fdesce" value="fdescribe('$VAR1$', () =&gt; {&#10;  $VAR2$&#10;});" description="focused describe" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;Name of the group&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="xit" value="xit('$VAR1$', function() {&#10;&#9;$VAR2$&#10;});" description="xit" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;should behave...&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="fit" value="fit('$VAR1$', function() {&#10;  $VAR2$&#10;});" description="focused it" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;should behave...&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="scf" value="spyOn($VAR1$, '$VAR2$').and.callFake($VAR3$);$END$" description="spyOn.and.callFake" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;object&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;method&quot;" alwaysStopAt="true" />
    <variable name="VAR3" expression="" defaultValue="&quot;function() \{&#10;  &#10;\}&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ste" value="spyOn($VAR1$, '$VAR2$').and.throwError('$VAR3$');$END$" description="spyOn.and.throwError" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;object&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;method&quot;" alwaysStopAt="true" />
    <variable name="VAR3" expression="" defaultValue="&quot;error&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="oc" value="jasmine.objectContaining({'$VAR1$': $VAR2$\});$END$" description="jasmine.objectContaining" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;key&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cso" value="jasmine.createSpyObj('$VAR1$', ['$VAR2$'$VAR3$]);$END$" description="createSpyObj" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;spy name&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;method name&quot;" alwaysStopAt="true" />
    <variable name="VAR3" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="xite" value="xit('$VAR1$', () =&gt; {&#10;&#9;$VAR2$&#10;});" description="xit" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;should behave...&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="fdesc" value="fdescribe('$VAR1$', function() {&#10;  $VAR2$&#10;});" description="focused describe" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;Name of the group&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cs" value="jasmine.createSpy('$VAR1$');$END$" description="createSpy" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="xdesce" value="xdescribe('$VAR1$', () =&gt; {&#10;&#9;$VAR2$&#10;});" description="xdescribe" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;Name of the group&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sct" value="spyOn($VAR1$, '$VAR2$').and.callThrough();$END$" description="spyOn.and.callThrough" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;object&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;method&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tbct" value="expect($VAR1$).toBeCloseTo($VAR2$, $VAR3$);$END$" description="toBeCloseTo" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;number&quot;" alwaysStopAt="true" />
    <variable name="VAR3" expression="" defaultValue="&quot;delta&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tc" value="expect($VAR1$).toContain($VAR2$);$END$" description="toContain" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;array&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;item&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="caf" value="$VAR1$.calls.argsFor($VAR2$)" description="spy.calls.argsFor" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;spy&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;call number&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cr" value="$VAR1$.calls.reset()" description="spy.calls.reset" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;spy&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ca" value="$VAR1$.calls.all()" description="spy.calls.all" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;spy&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="thbc" value="expect($VAR1$).toHaveBeenCalled();$END$" description="toHaveBeenCalled" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="nc" value="expect($VAR1$).not.toContain($VAR2$);$END$" description="not.toContain" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;array&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;item&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="nt" value="expect($VAR1$).not.toThrow();$END$" description="not.toThrow" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tblt" value="expect($VAR1$).toBeLessThan($VAR2$);$END$" description="toBeLessThan" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tbn" value="expect($VAR1$).toBeNull();$END$" description="toBeNull" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tbf" value="expect($VAR1$).toBeFalsy();$END$" description="toBeFalsy" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bee" value="beforeEach(() =&gt; {&#10;&#9;$VAR1$&#10;});" description="beforeEach" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cc" value="$VAR1$.calls.count()" description="spy.calls.count" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;spy&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ae" value="afterEach(function() {&#10;&#9;$VAR1$&#10;});" description="afterEach" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tte" value="expect($VAR1$).toThrowError($VAR2$);$END$" description="toThrowError" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;error&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tbgt" value="expect($VAR1$).toBeGreaterThan($VAR2$);$END$" description="toBeGreaterThan" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tbu" value="expect($VAR1$).toBeUndefined();$END$" description="toBeUndefined" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="exp" value="expect($VAR1$)$END$" description="expect" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tt" value="expect($VAR1$).toThrow();$END$" description="toThrow" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tm" value="expect($VAR1$).toMatch($VAR2$);$END$" description="toMatch" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="be" value="beforeEach(function() {&#10;&#9;$VAR1$&#10;});" description="beforeEach" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="throw" value="throw &quot;$VAR1$&quot;;&#10;$END$" description="Throw Exception" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="nam" value="namespace $VAR1${&#10;&#9;$END$&#10;}" description="" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="if" value="if ($VAR1$) {&#10;&#9;$END$&#10;}" description="if …" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;condition&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="func" value="function $VAR1$($VAR2$) {&#10;&#9;$END$&#10;}" description="Function" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;function_name&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;argument&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="prop" value="private _$VAR1$ : $VAR2$;&#10;public get $VAR1$() : $VAR2$ {&#10;&#9;return this._$VAR1$;&#10;}&#10;public set $VAR1$(v : $VAR2$) {&#10;&#9;this._$VAR1$ = v;&#10;}" description="full property …" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;string&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ret0" value="return false;$END$" description="return false" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ret" value="return $VAR1$;$END$" description="return statement" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="setter" value="public set $VAR1$(v : $VAR2$) {&#10;&#9;this.$VAR3$ = v;&#10;}" description="set-property …" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;string&quot;" alwaysStopAt="true" />
    <variable name="VAR3" expression="" defaultValue="&quot;_value&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="fori" value="for (var $VAR20$ = 0; $VAR20$ &lt; $VAR1$.length; $VAR20$++) {&#10;&#9;$VAR100$$END$&#10;}" description="for (…) {…}" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;Things&quot;" alwaysStopAt="true" />
    <variable name="VAR20" expression="" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <variable name="VAR100" expression="" defaultValue="&quot;[]&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="do" value="do {&#10;&#9;$END$&#10;} while ($VAR1$);" description="do … while …" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;a &lt;= 10&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="getter" value="public get $VAR1$() : $VAR2$ {&#10;&#9;$VAR3$&#10;}" description="get-property …" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;string&quot;" alwaysStopAt="true" />
    <variable name="VAR3" expression="" defaultValue="&quot;return &quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ctor" value="constructor($VAR1$) {&#10;&#9;$VAR2$&#10;}" description="constructor …" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;// code...&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="meth" value="$VAR1$ $VAR2$($VAR3$) : $VAR4$ {&#10;&#9;$END$&#10;}" description="class method" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;public&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="VAR3" expression="" defaultValue="&quot;arguments&quot;" alwaysStopAt="true" />
    <variable name="VAR4" expression="" defaultValue="&quot;void&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ref" value="/// &lt;reference path=&quot;$VAR1$&quot; /&gt;&#10;$END$" description="does a triple-slash reference" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="for" value="for (var $VAR1$ = $VAR2$; $VAR1$ &lt; $VAR3$; ++$VAR1$) {&#10;&#9;$END$&#10;}" description="for (…) {…}" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;0&quot;" alwaysStopAt="true" />
    <variable name="VAR3" expression="" defaultValue="&quot;length&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="class" value="class $VAR2$$VAR3$ {&#10;&#9;$VAR5$&#10;&#9;$VAR6$($VAR7$) {&#10;&#9;&#9;$END$&#10;&#9;}&#10;}" description="class …" toReformat="true" toShortenFQNames="true">
    <variable name="VAR2" expression="" defaultValue="&quot;ClassName&quot;" alwaysStopAt="true" />
    <variable name="VAR3" expression="" defaultValue="&quot; extends &quot;" alwaysStopAt="true" />
    <variable name="VAR5" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR6" expression="" defaultValue="&quot;constructor&quot;" alwaysStopAt="true" />
    <variable name="VAR7" expression="" defaultValue="&quot;argument&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="clog" value="console.log($VAR1$);" description="console log" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="import" value="import $VAR1$ = require(&quot;$VAR2$&quot;);&#10;$END$" description="imports a module …" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="forobj" value="for (var $VAR1$ in $VAR2$) {&#10;&#9;$END$&#10;}" description="for … in … loop" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;Object&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="switch" value="switch ($VAR1$) {&#10;&#9;case &quot;$VAR2$&quot;:&#10;&#9;&#9;$VAR3$&#10;&#9;&#9;break;&#10;&#9;$END$&#10;&#9;default:&#10;&#9;&#9;$VAR4$&#10;&#9;&#9;break;&#10;}" description="switch statement …" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;variable&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <variable name="VAR3" expression="" defaultValue="&quot;// code...&quot;" alwaysStopAt="true" />
    <variable name="VAR4" expression="" defaultValue="&quot;// code...&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ret1" value="return true;$END$" description="return true" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="tout" value="setTimeout(() =&gt; {$END$}$VAR2$, $VAR1$);" description="setTimeout function" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;500&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ifelse" value="if ($VAR1$) { &#10;&#9;$VAR2$&#10;} else {&#10;&#9;$VAR3$&#10;}" description="if … else …" toReformat="true" toShortenFQNames="true">
    <variable name="VAR1" expression="" defaultValue="&quot;condition&quot;" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="&quot;// code...&quot;" alwaysStopAt="true" />
    <variable name="VAR3" expression="" defaultValue="&quot;// code...&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="funes" value="($VAR0$) =&gt; {&#10;  $VAR1$&#10;};" description="Function ES6" toReformat="false" toShortenFQNames="true">
    <variable name="VAR0" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="funin" value="($VAR0$) =&gt; $VAR1$; " description="Function ES6 Inline" toReformat="false" toShortenFQNames="true">
    <variable name="VAR0" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>